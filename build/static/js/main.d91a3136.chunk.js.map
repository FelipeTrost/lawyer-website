{"version":3,"sources":["logo.png","components/about.js","components/questions.js","components/contact.js","components/footer.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","reference","className","id","ref","Container","Accordion","question","answer","map","idx","Card","bg","text","key","Body","Title","Toggle","as","Button","variant","eventKey","Collapse","split","dangerouslySetInnerHTML","__html","success","close","Alert","show","dismissible","onClose","Form","action","method","encType","Group","Label","htmlFor","Control","type","name","required","File","accept","rows","href","target","icon","faInstagram","faLinkedin","src","logo","alt","height","width","aboutRef","questionsRef","contactRef","contactSuccess","contactClose","App","useState","loaded","setLoaded","setSuccess","useRef","useEffect","query","window","location","search","URLSearchParams","get","Navbar","collapseOnSelect","expand","fixed","to","Brand","aria-controls","Nav","Link","exact","path","render","current","scrollIntoView","behavior","block","scrollTo","top","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d91a3136.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.738adf9e.png\";","import React from 'react';\r\n\r\n// Bootstrap\r\nimport {Container} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default ({reference}) => (\r\n    <section className=\"about\" id=\"about\" ref={reference}>\r\n        <Container>\r\n            <h1 className=\"section-title\">¿Quiénes somos?</h1>\r\n            <p>\r\n                Somos un grupo de abogados unidos por la convicción de defender a los afiliados de las distintas Isapres frente a las continuas y abusivas alzas unilaterales en los precio de sus planes de salud.\r\n                <br />\r\n                Nos dedicamos a la tramitación de recursos de protección en contra de las Isapres, sin ningún costo para ti. \r\n                <br />\r\n                Tramitamos en todo Chile.\r\n            </p>\r\n        </Container>\r\n    </section>\r\n)","import React from 'react';\r\n\r\n// Bootstrap\r\nimport {Container, Card, Accordion, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default ({reference}) => (\r\n    <section className=\"questions\" id=\"questions\" ref={reference}>\r\n        <Container>\r\n            <h1 className=\"section-title\">Preguntas frecuentes</h1>\r\n\r\n            <Accordion className=\"cards\">\r\n                {[\r\n                    {\r\n                        question: \"¿Qué es una carta de adecuación?\", \r\n                        answer: \"La carta de adecuación es una carta certificada enviada al domicilio registrado por el afiliado en la Isapre, que se envía con, a lo menos 90 días de antelación al vencimiento de la anualidad del contrato.\\n En esta carta, la Isapre comunica al afiliado las nuevas condiciones en su contrato de salud, que se traducen en el aumento del precio base del plan, aun cuando la cobertura de las prestaciones médicas se mantiene.\"\r\n                    },\r\n                    {\r\n                        question: \"¿Qué alternativas tengo?\", \r\n                        answer: \"La carta de adecuación ofrece tres alternativas, que deben ejercerse antes de que se cumpla la anualidad del contrato: \\n\\n1.\tAceptar el aumento en el precio base del plan de salud contratado.\\n2.\tContratar el plan alternativo que ofrece la Isapre, el cual, en la mayoría de los casos, responde a un precio similar al plan contratado previo al alza, pero tiene una menor cobertura.\\n3.\tDesafiliarse de la Isapre.\\nAdicional a las opciones ofrecidas por la Isapre, existe una cuarta posibilidad: deducir un recurso de protección en contra de la Isapre, por el alza injustificada en el precio del plan de salud.\"\r\n                    },\r\n                    {\r\n                        question: \"¿Cuál es el plazo para reclamar?\", \r\n                        answer: \"El plazo es de 90 días desde la emisión de la carta de adecuación (según la fecha del documento) y hasta 30 días de materializada el alza, según fecha del Formulario Único de Notificación (FUN).\"\r\n                    },\r\n                    {\r\n                        question: \"¿Cuál es el costo de la tramitación?\", \r\n                        answer: \"Este tramite NO TIENE COSTO, dado que los honorarios de los abogados los fija la Corte, a través de las costas, que son pagadas directamente por la Isapre. \"\r\n                    },\r\n                    {\r\n                        question: \"¿Cuánto dura la tramitación del recurso?\", \r\n                        answer: \"Dependiendo de la ciudad en la que resida el afiliado, los tiempos pueden variar entre 2 o 3 meses, hasta un año. \\n Lo importante es que la primera resolución de la Corte es una “orden de no innovar” lo que significa que la Isapre debe suspender el alza del precio del plan, hasta que se dicte la sentencia del recurso.\"\r\n                    },\r\n                    {\r\n                        question: \"El alza no es significativa, ¿debería reclamar?\", \r\n                        answer: \"Muchos afiliados creen que el alza de precio es insignificante, por lo que no le prestan atención a estas alzas. Sin embargo, existen buenas razones para tramitar un recurso de protección:\\n1.\tEl precio base del plan es un factor multiplicador que se aplica para cada uno de los beneficiarios del plan, o sea, si la familia crece, esto se reflejará en el valor final del plan.\\n2.\tEl precio base del plan es un factor multiplicador que se aplica para cada uno de los beneficiarios del plan, o sea, si la familia crece, esto se reflejará en el valor final del plan.\\n3.\tEl precio base del plan es un factor multiplicador que se aplica para cada uno de los beneficiarios del plan, o sea, si la familia crece, esto se reflejará en el valor final del plan.\\n4.\tEl precio base del plan es un factor multiplicador que se aplica para cada uno de los beneficiarios del plan, o sea, si la familia crece, esto se reflejará en el valor final del plan.\\n* Según fuentes de la Superintendencia de Salud, el precio de un plan de Isapre ha aumentado en promedio:\\n<b>27,9%</b> en planes BANMÉDICA.\\n<b>56,8%</b> en planes CONSALUD.\\n<b>72,5%</b> en planes COLMENA.\\n<b>85,6%</b> en planes CRUZ BLANCA.\"\r\n                    },\r\n                ].map((question, idx) => (\r\n                    <Card className=\"Card\" bg=\"dark\" text=\"light\" key={idx}>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey={idx}>\r\n                                        {question.question}\r\n                                </Accordion.Toggle>\r\n                            </Card.Title>\r\n                            {/* <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle> */}\r\n                                \r\n                            <Accordion.Collapse eventKey={idx}>\r\n                                <Card.Body>\r\n                                    {question.answer.split('\\n').map((text, idx) => <p key={idx} dangerouslySetInnerHTML={{__html: text}} />)}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card.Body>\r\n                    </Card>\r\n                       \r\n                ))}\r\n            </Accordion>\r\n            \r\n        </Container>\r\n    </section>\r\n)","import React from 'react';\r\n\r\n// Bootstrap\r\nimport {Container, Form, Card, Button, Alert} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default ({reference, success, close}) => (\r\n    <section className=\"contact\" id=\"contact\" ref={reference}>\r\n        <Container>\r\n            <h1 className=\"section-title\">Contacto</h1>\r\n\r\n            <Alert show={success !== null} variant={success === \"true\" ? \"success\" : success === \"false\" && \"danger\"} dismissible onClose={close}>\r\n                <p>\r\n                    {success === \"true\" ? \"Mensaje enviado exitosamente\" : \"Ha ocurrido un error, por favor intente de nuevo más tarde\"}\r\n                </p>\r\n            </Alert>\r\n\r\n            <Card className=\"form\">\r\n                <Form action=\"https://paremoselalzaisapre.cl/mail/send.php\" method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"name\">Nombre Completo</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"name\" id=\"name\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"identification\">Cédula de identidad</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"identification\" id=\"identification\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"location\">Domicilio y Comuna</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"location\" id=\"location\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"isapre\">Isapre</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"isapre\" id=\"isapre\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label  htmlFor=\"phone\">Teléfono</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"phone\" required/>\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"email\">Correo</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" id=\"email\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"letter\">Carta de adecuación o FUN (escaneado lo más claro posible, Formato: jpg. o pdf.)</Form.Label>\r\n                        <Form.File type=\"file\" name=\"letter\" id=\"letter\" accept=\".pdf,.png,.jpg\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"message\">Mensaje (opcional)</Form.Label>\r\n                        <Form.Control as=\"textarea\" name=\"message\" id=\"message\" rows=\"3\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">Enviar</Button>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    </section>\r\n)","import React from 'react';\r\n\r\n// Fontawesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInstagram, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\n\r\n// Bootstrap\r\n// import {Container, Card, Row} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport logo from '../logo.png';\r\n\r\nexport default ({reference}) => (\r\n    <footer ref={reference}>\r\n        <div className=\"items\">\r\n            <div>\r\n                <h3 className=\"text-uppercase section-title\">Redes sociales</h3>\r\n                <a href=\"https://www.instagram.com/paremoselalza/\" target=\"blank\"><FontAwesomeIcon icon={faInstagram} className=\"icon\" /> Instagram</a>\r\n                <a href=\"www.linkedin.com/in/paremos-el-alza-isapre-6735411aa\" target=\"blank\"><FontAwesomeIcon icon={faLinkedin} className=\"icon\" /> Linkedin</a>\r\n                \r\n            </div>\r\n\r\n            <div>\r\n                <h3 className=\"text-uppercase section-title\">Contacto</h3>\r\n                <a href=\"mailto:paremoselalzaisapre@gmail.com\">paremoselalzaisapre@gmail.com</a>\r\n            </div>\r\n\r\n            <h2 className=\"section-title\"><img src={logo} alt=\"paremoselalzaisapre.cl\" height=\"70px\" width=\"70x\" /> Paremos el alza Isapre</h2>\r\n        </div>\r\n    \r\n        <div className=\"footer-copyright text-center py-3\">© 2020 Derechos de autor: <b>paremoselalzaisapre.cl</b>\r\n        </div>\r\n    </footer>\r\n)","import React from 'react';\r\n\r\nimport About from './about';\r\nimport Questions from './questions';\r\nimport Contact from './contact';\r\nimport Footer from './footer';\r\n\r\nexport default ({aboutRef, questionsRef, contactRef, contactSuccess, contactClose}) => (\r\n    <>\r\n        <About reference={aboutRef} />\r\n        <Questions reference={questionsRef} />\r\n        <Contact reference={contactRef} success={contactSuccess} close={contactClose}/>\r\n        <Footer />\r\n    </>\r\n)","// React\r\nimport React, {useRef, useEffect, useState}  from 'react';\r\n\r\n// Bootstrap\r\nimport { Navbar,Nav, Container} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// React router\r\nimport {  BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n// Frontend\r\nimport './app.css';\r\nimport Components from './components';\r\n\r\n// Media\r\nimport logo from './logo.png';\r\n\r\nconst App = () => {\r\n    const [loaded, setLoaded]= useState(false);\r\n    const [success, setSuccess]= useState(null);\r\n\r\n    const aboutRef = useRef(null);\r\n    const questionsRef = useRef(null);\r\n    const contactRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        setLoaded(true);\r\n    \r\n        const query = window.location.search;\r\n        const params = new URLSearchParams(query);\r\n        const success = params.get(\"success\");\r\n\r\n        if(success !== null){\r\n            setSuccess(success);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\" >\r\n            <Router>\r\n     \r\n                <header>\r\n                    <Navbar collapseOnSelect  expand=\"md\" bg=\"light\" variant=\"light\" fixed=\"top\">\r\n                        <LinkContainer to=\"/\">\r\n                            <>     \r\n                                <Navbar.Brand><img src={logo} alt=\"paremoselalzaisapre.cl logo\" height=\"50px\" width=\"50x\" /></Navbar.Brand>\r\n                                <Navbar.Brand>Paremos el alza</Navbar.Brand>\r\n                            </>\r\n                        </LinkContainer>\r\n\r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <LinkContainer to=\"/quienessomos\">     \r\n                                    <Nav.Link>Quiénes somos</Nav.Link>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to=\"/preguntas\">     \r\n                                    <Nav.Link>Preguntas frecuentes</Nav.Link>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to=\"/contacto\">     \r\n                                    <Nav.Link>Contacto</Nav.Link>\r\n                                </LinkContainer>\r\n\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n\r\n                    <Container className=\"text-center\">\r\n                        <h3>PAREMOS EL ALZA DE TU ISAPRE</h3>\r\n                        <h4>Tramitamos sin costo recursos de protección por alza en el precio base de tu plan.</h4>\r\n                    </Container>\r\n                </header>\r\n\r\n                <Components contactSuccess={success} contactClose={() => setSuccess(null)}  aboutRef={aboutRef} questionsRef={questionsRef} contactRef={contactRef} />       \r\n\r\n                {loaded && ( <Switch>\r\n                    <Route exact path=\"/quienessomos\" render={() => aboutRef.current && aboutRef.current.scrollIntoView({behavior: 'smooth', block: \"start\",}) } />\r\n                    <Route exact path=\"/preguntas\"  render={() => questionsRef.current && questionsRef.current.scrollIntoView({behavior: 'smooth', block: \"start\",}) } />\r\n                    <Route exact path=\"/contacto\"   render={() => contactRef.current && contactRef.current.scrollIntoView({behavior: 'smooth', block: \"start\",}) } />\r\n                    <Route exact path=\"/\" render={() => window.scrollTo({top: 0, behavior: 'smooth'}) } />\r\n                </Switch>)}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}